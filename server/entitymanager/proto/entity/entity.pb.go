// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.10
// source: server/entitymanager/proto/entity.proto

package entity

import (
	bootz "github.com/openconfig/bootz/proto/bootz"
	authz "github.com/openconfig/gnsi/authz"
	certz "github.com/openconfig/gnsi/certz"
	_ "github.com/openconfig/gnsi/credentialz"
	pathz "github.com/openconfig/gnsi/pathz"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BootMode int32

const (
	BootMode_UnSecure BootMode = 0
	BootMode_Secure   BootMode = 2
)

// Enum value maps for BootMode.
var (
	BootMode_name = map[int32]string{
		0: "UnSecure",
		2: "Secure",
	}
	BootMode_value = map[string]int32{
		"UnSecure": 0,
		"Secure":   2,
	}
)

func (x BootMode) Enum() *BootMode {
	p := new(BootMode)
	*p = x
	return p
}

func (x BootMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BootMode) Descriptor() protoreflect.EnumDescriptor {
	return file_server_entitymanager_proto_entity_proto_enumTypes[0].Descriptor()
}

func (BootMode) Type() protoreflect.EnumType {
	return &file_server_entitymanager_proto_entity_proto_enumTypes[0]
}

func (x BootMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BootMode.Descriptor instead.
func (BootMode) EnumDescriptor() ([]byte, []int) {
	return file_server_entitymanager_proto_entity_proto_rawDescGZIP(), []int{0}
}

type Options struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GnsiGlobalConfig      *GNSIConfig `protobuf:"bytes,1,opt,name=gnsi_global_config,json=gnsiGlobalConfig,proto3" json:"gnsi_global_config,omitempty"`
	ServerTrustBundleFile string      `protobuf:"bytes,2,opt,name=server_trust_bundle_file,json=serverTrustBundleFile,proto3" json:"server_trust_bundle_file,omitempty"`
}

func (x *Options) Reset() {
	*x = Options{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_entitymanager_proto_entity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Options) ProtoMessage() {}

func (x *Options) ProtoReflect() protoreflect.Message {
	mi := &file_server_entitymanager_proto_entity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Options.ProtoReflect.Descriptor instead.
func (*Options) Descriptor() ([]byte, []int) {
	return file_server_entitymanager_proto_entity_proto_rawDescGZIP(), []int{0}
}

func (x *Options) GetGnsiGlobalConfig() *GNSIConfig {
	if x != nil {
		return x.GnsiGlobalConfig
	}
	return nil
}

func (x *Options) GetServerTrustBundleFile() string {
	if x != nil {
		return x.ServerTrustBundleFile
	}
	return ""
}

type Entities struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options *Options   `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
	Chassis []*Chassis `protobuf:"bytes,2,rep,name=chassis,proto3" json:"chassis,omitempty"`
}

func (x *Entities) Reset() {
	*x = Entities{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_entitymanager_proto_entity_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entities) ProtoMessage() {}

func (x *Entities) ProtoReflect() protoreflect.Message {
	mi := &file_server_entitymanager_proto_entity_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entities.ProtoReflect.Descriptor instead.
func (*Entities) Descriptor() ([]byte, []int) {
	return file_server_entitymanager_proto_entity_proto_rawDescGZIP(), []int{1}
}

func (x *Entities) GetOptions() *Options {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *Entities) GetChassis() []*Chassis {
	if x != nil {
		return x.Chassis
	}
	return nil
}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BootConfig *bootz.BootConfig `protobuf:"bytes,1,opt,name=boot_config,json=bootConfig,proto3" json:"boot_config,omitempty"`
	DhcpConfig *DHCPConfig       `protobuf:"bytes,2,opt,name=dhcp_config,json=dhcpConfig,proto3" json:"dhcp_config,omitempty"`
	GnsiConfig *GNSIConfig       `protobuf:"bytes,3,opt,name=gnsi_config,json=gnsiConfig,proto3" json:"gnsi_config,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_entitymanager_proto_entity_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_server_entitymanager_proto_entity_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_server_entitymanager_proto_entity_proto_rawDescGZIP(), []int{2}
}

func (x *Config) GetBootConfig() *bootz.BootConfig {
	if x != nil {
		return x.BootConfig
	}
	return nil
}

func (x *Config) GetDhcpConfig() *DHCPConfig {
	if x != nil {
		return x.DhcpConfig
	}
	return nil
}

func (x *Config) GetGnsiConfig() *GNSIConfig {
	if x != nil {
		return x.GnsiConfig
	}
	return nil
}

type GNSIConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthzUploadFile string               `protobuf:"bytes,1,opt,name=authz_upload_file,json=authzUploadFile,proto3" json:"authz_upload_file,omitempty"`
	AuthzUpload     *authz.UploadRequest `protobuf:"bytes,2,opt,name=authz_upload,json=authzUpload,proto3" json:"authz_upload,omitempty"`
	PathzUploadFile string               `protobuf:"bytes,3,opt,name=pathz_upload_file,json=pathzUploadFile,proto3" json:"pathz_upload_file,omitempty"`
	PathzUpload     *pathz.UploadRequest `protobuf:"bytes,4,opt,name=pathz_upload,json=pathzUpload,proto3" json:"pathz_upload,omitempty"`
	CertzUpload     *certz.UploadRequest `protobuf:"bytes,5,opt,name=certz_upload,json=certzUpload,proto3" json:"certz_upload,omitempty"`
	CertzUploadFile string               `protobuf:"bytes,6,opt,name=certz_upload_file,json=certzUploadFile,proto3" json:"certz_upload_file,omitempty"`
	CredentialsFile string               `protobuf:"bytes,7,opt,name=credentials_file,json=credentialsFile,proto3" json:"credentials_file,omitempty"`
	Credentials     *bootz.Credentials   `protobuf:"bytes,8,opt,name=credentials,proto3" json:"credentials,omitempty"`
}

func (x *GNSIConfig) Reset() {
	*x = GNSIConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_entitymanager_proto_entity_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GNSIConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GNSIConfig) ProtoMessage() {}

func (x *GNSIConfig) ProtoReflect() protoreflect.Message {
	mi := &file_server_entitymanager_proto_entity_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GNSIConfig.ProtoReflect.Descriptor instead.
func (*GNSIConfig) Descriptor() ([]byte, []int) {
	return file_server_entitymanager_proto_entity_proto_rawDescGZIP(), []int{3}
}

func (x *GNSIConfig) GetAuthzUploadFile() string {
	if x != nil {
		return x.AuthzUploadFile
	}
	return ""
}

func (x *GNSIConfig) GetAuthzUpload() *authz.UploadRequest {
	if x != nil {
		return x.AuthzUpload
	}
	return nil
}

func (x *GNSIConfig) GetPathzUploadFile() string {
	if x != nil {
		return x.PathzUploadFile
	}
	return ""
}

func (x *GNSIConfig) GetPathzUpload() *pathz.UploadRequest {
	if x != nil {
		return x.PathzUpload
	}
	return nil
}

func (x *GNSIConfig) GetCertzUpload() *certz.UploadRequest {
	if x != nil {
		return x.CertzUpload
	}
	return nil
}

func (x *GNSIConfig) GetCertzUploadFile() string {
	if x != nil {
		return x.CertzUploadFile
	}
	return ""
}

func (x *GNSIConfig) GetCredentialsFile() string {
	if x != nil {
		return x.CredentialsFile
	}
	return ""
}

func (x *GNSIConfig) GetCredentials() *bootz.Credentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

type DHCPConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HardwareEthernet []string `protobuf:"bytes,1,rep,name=hardware_ethernet,json=hardwareEthernet,proto3" json:"hardware_ethernet,omitempty"`
	FixedAddress     []string `protobuf:"bytes,2,rep,name=fixed_address,json=fixedAddress,proto3" json:"fixed_address,omitempty"`
}

func (x *DHCPConfig) Reset() {
	*x = DHCPConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_entitymanager_proto_entity_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DHCPConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DHCPConfig) ProtoMessage() {}

func (x *DHCPConfig) ProtoReflect() protoreflect.Message {
	mi := &file_server_entitymanager_proto_entity_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DHCPConfig.ProtoReflect.Descriptor instead.
func (*DHCPConfig) Descriptor() ([]byte, []int) {
	return file_server_entitymanager_proto_entity_proto_rawDescGZIP(), []int{4}
}

func (x *DHCPConfig) GetHardwareEthernet() []string {
	if x != nil {
		return x.HardwareEthernet
	}
	return nil
}

func (x *DHCPConfig) GetFixedAddress() []string {
	if x != nil {
		return x.FixedAddress
	}
	return nil
}

type Chassis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SerialNumber           string               `protobuf:"bytes,1,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	Name                   string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PartNumber             string               `protobuf:"bytes,3,opt,name=part_number,json=partNumber,proto3" json:"part_number,omitempty"`
	Manufacturer           string               `protobuf:"bytes,4,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	OwnershipVoucher       string               `protobuf:"bytes,5,opt,name=ownership_voucher,json=ownershipVoucher,proto3" json:"ownership_voucher,omitempty"`
	BootloaderPasswordHash string               `protobuf:"bytes,6,opt,name=bootloader_password_hash,json=bootloaderPasswordHash,proto3" json:"bootloader_password_hash,omitempty"`
	BootMode               BootMode             `protobuf:"varint,7,opt,name=boot_mode,json=bootMode,proto3,enum=entity.BootMode" json:"boot_mode,omitempty"`
	SoftwareImage          *bootz.SoftwareImage `protobuf:"bytes,8,opt,name=software_image,json=softwareImage,proto3" json:"software_image,omitempty"`
	ControllerCards        []*bootz.ControlCard `protobuf:"bytes,9,rep,name=controller_cards,json=controllerCards,proto3" json:"controller_cards,omitempty"`
	Config                 *Config              `protobuf:"bytes,10,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *Chassis) Reset() {
	*x = Chassis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_entitymanager_proto_entity_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chassis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chassis) ProtoMessage() {}

func (x *Chassis) ProtoReflect() protoreflect.Message {
	mi := &file_server_entitymanager_proto_entity_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chassis.ProtoReflect.Descriptor instead.
func (*Chassis) Descriptor() ([]byte, []int) {
	return file_server_entitymanager_proto_entity_proto_rawDescGZIP(), []int{5}
}

func (x *Chassis) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *Chassis) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Chassis) GetPartNumber() string {
	if x != nil {
		return x.PartNumber
	}
	return ""
}

func (x *Chassis) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

func (x *Chassis) GetOwnershipVoucher() string {
	if x != nil {
		return x.OwnershipVoucher
	}
	return ""
}

func (x *Chassis) GetBootloaderPasswordHash() string {
	if x != nil {
		return x.BootloaderPasswordHash
	}
	return ""
}

func (x *Chassis) GetBootMode() BootMode {
	if x != nil {
		return x.BootMode
	}
	return BootMode_UnSecure
}

func (x *Chassis) GetSoftwareImage() *bootz.SoftwareImage {
	if x != nil {
		return x.SoftwareImage
	}
	return nil
}

func (x *Chassis) GetControllerCards() []*bootz.ControlCard {
	if x != nil {
		return x.ControllerCards
	}
	return nil
}

func (x *Chassis) GetConfig() *Config {
	if x != nil {
		return x.Config
	}
	return nil
}

var File_server_entitymanager_proto_entity_proto protoreflect.FileDescriptor

var file_server_entitymanager_proto_entity_proto_rawDesc = []byte{
	0x0a, 0x27, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x67, 0x6e, 0x73, 0x69, 0x2f, 0x61, 0x75, 0x74, 0x68,
	0x7a, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2f, 0x67, 0x6e, 0x73, 0x69, 0x2f, 0x63, 0x65, 0x72, 0x74, 0x7a, 0x2f,
	0x63, 0x65, 0x72, 0x74, 0x7a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x38, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2f, 0x67, 0x6e, 0x73, 0x69, 0x2f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x7a, 0x2f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x7a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x67, 0x6e, 0x73,
	0x69, 0x2f, 0x70, 0x61, 0x74, 0x68, 0x7a, 0x2f, 0x70, 0x61, 0x74, 0x68, 0x7a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x6f, 0x6f, 0x74, 0x7a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x84, 0x01, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x40, 0x0a, 0x12, 0x67, 0x6e, 0x73, 0x69, 0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x67, 0x4e, 0x53, 0x49, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x10, 0x67, 0x6e, 0x73, 0x69, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x37, 0x0a, 0x18, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74,
	0x72, 0x75, 0x73, 0x74, 0x5f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x72,
	0x75, 0x73, 0x74, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x22, 0x60, 0x0a,
	0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x29, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43,
	0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x52, 0x07, 0x63, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x22,
	0xa6, 0x01, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x32, 0x0a, 0x0b, 0x62, 0x6f,
	0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x62, 0x6f, 0x6f, 0x74, 0x7a, 0x2e, 0x42, 0x6f, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x0a, 0x62, 0x6f, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x33,
	0x0a, 0x0b, 0x64, 0x68, 0x63, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x44, 0x48, 0x43,
	0x50, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x64, 0x68, 0x63, 0x70, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x33, 0x0a, 0x0b, 0x67, 0x6e, 0x73, 0x69, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x67, 0x4e, 0x53, 0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x67, 0x6e,
	0x73, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xb4, 0x03, 0x0a, 0x0a, 0x67, 0x4e, 0x53,
	0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x75, 0x74, 0x68, 0x7a,
	0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x12, 0x3f, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x5f, 0x75, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6e, 0x73, 0x69,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x61, 0x74, 0x68, 0x7a, 0x5f, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x70, 0x61, 0x74, 0x68, 0x7a, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x12, 0x3f, 0x0a, 0x0c, 0x70, 0x61, 0x74, 0x68, 0x7a, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6e, 0x73, 0x69, 0x2e, 0x70, 0x61,
	0x74, 0x68, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x70, 0x61, 0x74, 0x68, 0x7a, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x3f, 0x0a, 0x0c, 0x63, 0x65, 0x72, 0x74, 0x7a, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6e, 0x73, 0x69, 0x2e, 0x63,
	0x65, 0x72, 0x74, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x7a, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x65, 0x72, 0x74, 0x7a, 0x5f, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63,
	0x65, 0x72, 0x74, 0x7a, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x29,
	0x0a, 0x10, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x5f, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x62, 0x6f, 0x6f, 0x74, 0x7a, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x73, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x22,
	0x5e, 0x0a, 0x0a, 0x44, 0x48, 0x43, 0x50, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2b, 0x0a,
	0x11, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x65, 0x74, 0x68, 0x65, 0x72, 0x6e,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61,
	0x72, 0x65, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x69,
	0x78, 0x65, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0c, 0x66, 0x69, 0x78, 0x65, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0xc1, 0x03, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x6e,
	0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x56,
	0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x18, 0x62, 0x6f, 0x6f, 0x74, 0x6c, 0x6f,
	0x61, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x62, 0x6f, 0x6f, 0x74, 0x6c, 0x6f,
	0x61, 0x64, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x2d, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x42, 0x6f, 0x6f,
	0x74, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x3b, 0x0a, 0x0e, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x6f, 0x6f, 0x74, 0x7a, 0x2e,
	0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x0d, 0x73,
	0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x10,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6f, 0x6f, 0x74, 0x7a, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2a, 0x24, 0x0a, 0x08, 0x42, 0x6f, 0x6f, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x0c, 0x0a, 0x08, 0x55, 0x6e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x65, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x53, 0x65, 0x63, 0x75, 0x72, 0x65, 0x10, 0x02, 0x42, 0x3f, 0x5a, 0x3d, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2f, 0x62, 0x6f, 0x6f, 0x74, 0x7a, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_server_entitymanager_proto_entity_proto_rawDescOnce sync.Once
	file_server_entitymanager_proto_entity_proto_rawDescData = file_server_entitymanager_proto_entity_proto_rawDesc
)

func file_server_entitymanager_proto_entity_proto_rawDescGZIP() []byte {
	file_server_entitymanager_proto_entity_proto_rawDescOnce.Do(func() {
		file_server_entitymanager_proto_entity_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_entitymanager_proto_entity_proto_rawDescData)
	})
	return file_server_entitymanager_proto_entity_proto_rawDescData
}

var file_server_entitymanager_proto_entity_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_server_entitymanager_proto_entity_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_server_entitymanager_proto_entity_proto_goTypes = []interface{}{
	(BootMode)(0),               // 0: entity.BootMode
	(*Options)(nil),             // 1: entity.Options
	(*Entities)(nil),            // 2: entity.Entities
	(*Config)(nil),              // 3: entity.Config
	(*GNSIConfig)(nil),          // 4: entity.gNSIConfig
	(*DHCPConfig)(nil),          // 5: entity.DHCPConfig
	(*Chassis)(nil),             // 6: entity.Chassis
	(*bootz.BootConfig)(nil),    // 7: bootz.BootConfig
	(*authz.UploadRequest)(nil), // 8: gnsi.authz.v1.UploadRequest
	(*pathz.UploadRequest)(nil), // 9: gnsi.pathz.v1.UploadRequest
	(*certz.UploadRequest)(nil), // 10: gnsi.certz.v1.UploadRequest
	(*bootz.Credentials)(nil),   // 11: bootz.Credentials
	(*bootz.SoftwareImage)(nil), // 12: bootz.SoftwareImage
	(*bootz.ControlCard)(nil),   // 13: bootz.ControlCard
}
var file_server_entitymanager_proto_entity_proto_depIdxs = []int32{
	4,  // 0: entity.Options.gnsi_global_config:type_name -> entity.gNSIConfig
	1,  // 1: entity.Entities.options:type_name -> entity.Options
	6,  // 2: entity.Entities.chassis:type_name -> entity.Chassis
	7,  // 3: entity.Config.boot_config:type_name -> bootz.BootConfig
	5,  // 4: entity.Config.dhcp_config:type_name -> entity.DHCPConfig
	4,  // 5: entity.Config.gnsi_config:type_name -> entity.gNSIConfig
	8,  // 6: entity.gNSIConfig.authz_upload:type_name -> gnsi.authz.v1.UploadRequest
	9,  // 7: entity.gNSIConfig.pathz_upload:type_name -> gnsi.pathz.v1.UploadRequest
	10, // 8: entity.gNSIConfig.certz_upload:type_name -> gnsi.certz.v1.UploadRequest
	11, // 9: entity.gNSIConfig.credentials:type_name -> bootz.Credentials
	0,  // 10: entity.Chassis.boot_mode:type_name -> entity.BootMode
	12, // 11: entity.Chassis.software_image:type_name -> bootz.SoftwareImage
	13, // 12: entity.Chassis.controller_cards:type_name -> bootz.ControlCard
	3,  // 13: entity.Chassis.config:type_name -> entity.Config
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_server_entitymanager_proto_entity_proto_init() }
func file_server_entitymanager_proto_entity_proto_init() {
	if File_server_entitymanager_proto_entity_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_server_entitymanager_proto_entity_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Options); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_entitymanager_proto_entity_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Entities); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_entitymanager_proto_entity_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_entitymanager_proto_entity_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GNSIConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_entitymanager_proto_entity_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DHCPConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_entitymanager_proto_entity_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chassis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_entitymanager_proto_entity_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_server_entitymanager_proto_entity_proto_goTypes,
		DependencyIndexes: file_server_entitymanager_proto_entity_proto_depIdxs,
		EnumInfos:         file_server_entitymanager_proto_entity_proto_enumTypes,
		MessageInfos:      file_server_entitymanager_proto_entity_proto_msgTypes,
	}.Build()
	File_server_entitymanager_proto_entity_proto = out.File
	file_server_entitymanager_proto_entity_proto_rawDesc = nil
	file_server_entitymanager_proto_entity_proto_goTypes = nil
	file_server_entitymanager_proto_entity_proto_depIdxs = nil
}
